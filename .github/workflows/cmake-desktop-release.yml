name: C/C++ Release build

on:
  push:
    tags:
      - 'v*'

env:
  BUILD_TYPE: Release
  ArtifactName: SpotifyControl

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
      app_version: ${{ steps.set_version.outputs.tag }}
      
    steps:
    - name: create-release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: true
        prerelease: false
        release_name: ${{ github.ref }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ github.token }}
    
    - uses: actions/checkout@v2
    - name: Set version
      id: set_version
      run: echo "tag=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT
    - name: Check version
      env:
        RELEASE_VERSION: ${{ steps.set_version.outputs.tag }}
      run: |
        echo $RELEASE_VERSION
        echo ${{ steps.set_version.outputs.tag }}
  
  build-ubuntu:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt install -y libcurl4-openssl-dev

    - name: Configure CMake project for release
      run: cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DDESKTOP=ON -DBASIC_AUTHORIZATION_BASE64=${{ secrets.BASIC_AUTHORIZATION_BASE64 }} -DREFRESH_TOKEN=${{ secrets.REFRESH_TOKEN }} 

    - name: Build CMake project
      run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}
    
    - name: Upload Artifact
      uses: actions/upload-artifact@v4.3.0
      with:
        name: ${{ env.ArtifactName }}-Linux
        path: ${{ github.workspace }}/build/app/App
        if-no-files-found: error

    - name: Upload Linux artifact to release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ${{ github.workspace }}/build/app/App
        asset_name: ${{ env.ArtifactName }}-Linux-Release-${{ needs.create-release.outputs.app_version }}
        asset_content_type: application/octet-stream

  build-mac:
    runs-on: macos-latest
    needs: create-release
    
    steps:
      - uses: actions/checkout@v3
  
      - name: Configure CMake project for release
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DDESKTOP=ON -DBASIC_AUTHORIZATION_BASE64=${{ secrets.BASIC_AUTHORIZATION_BASE64 }} -DREFRESH_TOKEN=${{ secrets.REFRESH_TOKEN }} 
  
      - name: Build CMake project
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }}
      
      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.0
        with:
          name: ${{ env.ArtifactName }}-MacOS
          path: ${{ github.workspace }}/build/app/App
          if-no-files-found: error

      - name: Upload MacOS artifact to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}

        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/build/app/App
          asset_name: ${{ env.ArtifactName }}-MacOS-Release-${{ needs.create-release.outputs.app_version }}
          asset_content_type: application/octet-stream